version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 10
      start_period: 20s

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes:
      - mongo-data:/data/db

  mongoexpress:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongoexpress
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "9191:9191"
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: halfacode
      SPRING_DATA_MONGODB_USERNAME: admin
      SPRING_DATA_MONGODB_PASSWORD: secret
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9191/api/orders/test"]
      interval: 15s
      retries: 5
      start_period: 40s

  shipping-service:
    build:
      context: ./shipping-service
      dockerfile: Dockerfile
    container_name: shipping-service
    ports:
      - "9292:9292"
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: javatechie
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9292/api/shipping/test"]
      interval: 15s
      retries: 5
      start_period: 40s

volumes:
  mongo-data:
